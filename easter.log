   0: /* Test program 'easter'
   2:                 ========
   3:    Computes Easter Sunday for the years 2010-2020. 
   4: */
   5: 
   6: int mod (int x, int y)
parser:   <program>
parser:     <type>
parser:     </type>
parser:     <func decl>
parser:       <type>
parser:       </type>
parser:       <param decl>
parser:       </param decl>
   7: { /* Computes x%y */
parser:       <type>
parser:       </type>
parser:       <param decl>
parser:       </param decl>
   8:   return x - (x/y*y);
parser:       <func body>
parser:         <statm list>
parser:           <statement>
parser:             <return-statm>
parser:               <expression>
parser:                 <term>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <variable>
parser:                         </variable>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                   <term opr>
parser:                   </term opr>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <inner expr>
parser:                           <expression>
parser:                             <term>
parser:                               <factor>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <variable>
parser:                                     </variable>
parser:                                   </operand>
parser:                                 </primary>
parser:                                 <factor opr>
parser:                                 </factor opr>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <variable>
parser:                                     </variable>
parser:                                   </operand>
parser:                                 </primary>
parser:                                 <factor opr>
   9: }
parser:                                 </factor opr>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <variable>
   10: 
   11: int easter (int y)
parser:                                     </variable>
parser:                                   </operand>
parser:                                 </primary>
parser:                               </factor>
parser:                             </term>
parser:                           </expression>
parser:                         </inner expr>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                 </term>
parser:               </expression>
parser:             </return-statm>
parser:           </statement>
parser:         </statm list>
parser:       </func body>
parser:     </func decl>
parser:     <type>
parser:     </type>
parser:     <func decl>
   12: {
parser:       <type>
   13:   int a;  int b;  int c;  int d;  int e;  int f;
parser:       </type>
parser:       <param decl>
parser:       </param decl>
parser:       <func body>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
   14:   int g;  int h;  int i;  int k;  int l;  int m;
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
   15: 
   16:   int month;  /* The date of Easter Sunday */
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
   17:   int m_name[5];
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
   18:   int day;
   19: 
   20:   int ix;
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
   21: 
   22:   a = mod(y,19);
parser:         </var decl>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <statm list>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <function call>
parser:                             <expr list>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
   23:   b = y / 100;
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                             </expr list>
parser:                           </function call>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <variable>
   24:   c = mod(y,100);
parser:                           </variable>
parser:                         </operand>
parser:                       </primary>
parser:                       <factor opr>
parser:                       </factor opr>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <function call>
parser:                             <expr list>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
   25:   d = b / 4;
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                             </expr list>
parser:                           </function call>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <variable>
   26:   e = mod(b,4);
parser:                           </variable>
parser:                         </operand>
parser:                       </primary>
parser:                       <factor opr>
parser:                       </factor opr>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <function call>
parser:                             <expr list>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
   27:   f = (b+8) / 25;
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                             </expr list>
parser:                           </function call>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <inner expr>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
   28:   g = (b-f+1) / 3;
parser:                           </inner expr>
parser:                         </operand>
parser:                       </primary>
parser:                       <factor opr>
parser:                       </factor opr>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <inner expr>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
   29:   h = mod(19*a+b-d-g+15,30);
parser:                           </inner expr>
parser:                         </operand>
parser:                       </primary>
parser:                       <factor opr>
parser:                       </factor opr>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <function call>
parser:                             <expr list>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                     <factor opr>
parser:                                     </factor opr>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
   30:   i = c / 4;
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                             </expr list>
parser:                           </function call>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <variable>
   31:   k = mod(c,4);
parser:                           </variable>
parser:                         </operand>
parser:                       </primary>
parser:                       <factor opr>
parser:                       </factor opr>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <function call>
parser:                             <expr list>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
   32:   l = mod(32+2*e+2*i-h-k,7);
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                             </expr list>
parser:                           </function call>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <function call>
parser:                             <expr list>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                     <factor opr>
parser:                                     </factor opr>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                     <factor opr>
parser:                                     </factor opr>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
   33:   m = (a+11*h+22*l) / 451;
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                             </expr list>
parser:                           </function call>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <inner expr>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                   <factor opr>
parser:                                   </factor opr>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                   <factor opr>
parser:                                   </factor opr>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
   34: 
   35:   month = (h+l-(7*m)+114) / 31;
parser:                           </inner expr>
parser:                         </operand>
parser:                       </primary>
parser:                       <factor opr>
parser:                       </factor opr>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <inner expr>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <inner expr>
parser:                                         <expression>
parser:                                           <term>
parser:                                             <factor>
parser:                                               <primary>
parser:                                                 <operand>
parser:                                                   <number>
parser:                                                   </number>
parser:                                                 </operand>
parser:                                               </primary>
parser:                                               <factor opr>
parser:                                               </factor opr>
parser:                                               <primary>
parser:                                                 <operand>
parser:                                                   <variable>
parser:                                                   </variable>
parser:                                                 </operand>
parser:                                               </primary>
parser:                                             </factor>
parser:                                           </term>
parser:                                         </expression>
parser:                                       </inner expr>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
   36:   month = (h+1
parser:                           </inner expr>
parser:                         </operand>
parser:                       </primary>
parser:                       <factor opr>
parser:                       </factor opr>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <inner expr>
   37:   -7);
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <variable>
parser:                                       </variable>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                                 <term opr>
   38:   day = mod(h+l-(7*m)+114,31) + 1;
parser:                                 </term opr>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
parser:                           </inner expr>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <assign-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <function call>
parser:                             <expr list>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <variable>
parser:                                         </variable>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <inner expr>
parser:                                           <expression>
parser:                                             <term>
parser:                                               <factor>
parser:                                                 <primary>
parser:                                                   <operand>
parser:                                                     <number>
parser:                                                     </number>
parser:                                                   </operand>
parser:                                                 </primary>
parser:                                                 <factor opr>
parser:                                                 </factor opr>
parser:                                                 <primary>
parser:                                                   <operand>
parser:                                                     <variable>
parser:                                                     </variable>
parser:                                                   </operand>
parser:                                                 </primary>
parser:                                               </factor>
parser:                                             </term>
parser:                                           </expression>
parser:                                         </inner expr>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                   <term opr>
parser:                                   </term opr>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                               <expression>
parser:                                 <term>
parser:                                   <factor>
parser:                                     <primary>
parser:                                       <operand>
parser:                                         <number>
parser:                                         </number>
parser:                                       </operand>
parser:                                     </primary>
parser:                                   </factor>
parser:                                 </term>
parser:                               </expression>
parser:                             </expr list>
   39:   if (month == 3) {
parser:                           </function call>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                     <term opr>
parser:                     </term opr>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:             </assign-statm>
parser:           </statement>
parser:           <statement>
parser:             <if-statm>
parser:               <expression>
parser:                 <term>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <variable>
parser:                         </variable>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                 </term>
parser:                 <rel opr>
parser:                 </rel opr>
parser:                 <term>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <number>
   40:     m_name[0] = 'M';  m_name[1] = 'a';  m_name[2] = 'r';
parser:                         </number>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                 </term>
parser:               </expression>
parser:               <statm list>
parser:                 <statement>
parser:                   <assign-statm>
parser:                     <assignment>
parser:                       <lhs-variable>
parser:                         <variable>
parser:                           <expression>
parser:                             <term>
parser:                               <factor>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <number>
parser:                                     </number>
parser:                                   </operand>
parser:                                 </primary>
parser:                               </factor>
parser:                             </term>
parser:                           </expression>
parser:                         </variable>
parser:                       </lhs-variable>
parser:                       <expression>
parser:                         <term>
parser:                           <factor>
parser:                             <primary>
parser:                               <operand>
parser:                                 <number>
parser:                                 </number>
parser:                               </operand>
parser:                             </primary>
parser:                           </factor>
parser:                         </term>
parser:                       </expression>
parser:                     </assignment>
parser:                   </assign-statm>
parser:                 </statement>
parser:                 <statement>
parser:                   <assign-statm>
parser:                     <assignment>
parser:                       <lhs-variable>
parser:                         <variable>
parser:                           <expression>
parser:                             <term>
parser:                               <factor>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <number>
parser:                                     </number>
parser:                                   </operand>
parser:                                 </primary>
parser:                               </factor>
parser:                             </term>
parser:                           </expression>
parser:                         </variable>
parser:                       </lhs-variable>
parser:                       <expression>
parser:                         <term>
parser:                           <factor>
parser:                             <primary>
parser:                               <operand>
parser:                                 <number>
parser:                                 </number>
parser:                               </operand>
parser:                             </primary>
parser:                           </factor>
parser:                         </term>
parser:                       </expression>
parser:                     </assignment>
parser:                   </assign-statm>
parser:                 </statement>
parser:                 <statement>
parser:                   <assign-statm>
parser:                     <assignment>
parser:                       <lhs-variable>
parser:                         <variable>
parser:                           <expression>
parser:                             <term>
parser:                               <factor>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <number>
parser:                                     </number>
parser:                                   </operand>
parser:                                 </primary>
parser:                               </factor>
parser:                             </term>
parser:                           </expression>
   41:     m_name[3] = 'c';  m_name[4] = 'h';
parser:                         </variable>
parser:                       </lhs-variable>
parser:                       <expression>
parser:                         <term>
parser:                           <factor>
parser:                             <primary>
parser:                               <operand>
parser:                                 <number>
parser:                                 </number>
parser:                               </operand>
parser:                             </primary>
parser:                           </factor>
parser:                         </term>
parser:                       </expression>
parser:                     </assignment>
parser:                   </assign-statm>
parser:                 </statement>
parser:                 <statement>
parser:                   <assign-statm>
parser:                     <assignment>
parser:                       <lhs-variable>
parser:                         <variable>
parser:                           <expression>
parser:                             <term>
parser:                               <factor>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <number>
parser:                                     </number>
parser:                                   </operand>
parser:                                 </primary>
parser:                               </factor>
parser:                             </term>
parser:                           </expression>
parser:                         </variable>
parser:                       </lhs-variable>
parser:                       <expression>
parser:                         <term>
parser:                           <factor>
parser:                             <primary>
parser:                               <operand>
parser:                                 <number>
parser:                                 </number>
parser:                               </operand>
parser:                             </primary>
parser:                           </factor>
parser:                         </term>
parser:                       </expression>
parser:                     </assignment>
parser:                   </assign-statm>
parser:                 </statement>
parser:                 <statement>
parser:                   <assign-statm>
parser:                     <assignment>
parser:                       <lhs-variable>
parser:                         <variable>
parser:                           <expression>
parser:                             <term>
parser:                               <factor>
parser:                                 <primary>
parser:                                   <operand>
parser:                                     <number>
parser:                                     </number>
parser:                                   </operand>
parser:                                 </primary>
parser:                               </factor>
parser:                             </term>
parser:                           </expression>
   42:   } else {
parser:                         </variable>
parser:                       </lhs-variable>
parser:                       <expression>
parser:                         <term>
parser:                           <factor>
parser:                             <primary>
parser:                               <operand>
parser:                                 <number>
parser:                                 </number>
parser:                               </operand>
parser:                             </primary>
parser:                           </factor>
parser:                         </term>
parser:                       </expression>
parser:                     </assignment>
parser:                   </assign-statm>
parser:                 </statement>
parser:               </statm list>
   43:     m_name[0] = 'A';  m_name[1] = 'p';  m_name[2] = 'r';
parser:               <else-part>
parser:                 <statm list>
parser:                   <statement>
parser:                     <assign-statm>
parser:                       <assignment>
parser:                         <lhs-variable>
parser:                           <variable>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
parser:                           </variable>
parser:                         </lhs-variable>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <number>
parser:                                   </number>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </assignment>
parser:                     </assign-statm>
parser:                   </statement>
parser:                   <statement>
parser:                     <assign-statm>
parser:                       <assignment>
parser:                         <lhs-variable>
parser:                           <variable>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
parser:                           </variable>
parser:                         </lhs-variable>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <number>
parser:                                   </number>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </assignment>
parser:                     </assign-statm>
parser:                   </statement>
parser:                   <statement>
parser:                     <assign-statm>
parser:                       <assignment>
parser:                         <lhs-variable>
parser:                           <variable>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
   44:     m_name[3] = 'i';  m_name[4] = 'l';
parser:                           </variable>
parser:                         </lhs-variable>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <number>
parser:                                   </number>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </assignment>
parser:                     </assign-statm>
parser:                   </statement>
parser:                   <statement>
parser:                     <assign-statm>
parser:                       <assignment>
parser:                         <lhs-variable>
parser:                           <variable>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
parser:                           </variable>
parser:                         </lhs-variable>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <number>
parser:                                   </number>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </assignment>
parser:                     </assign-statm>
parser:                   </statement>
parser:                   <statement>
parser:                     <assign-statm>
parser:                       <assignment>
parser:                         <lhs-variable>
parser:                           <variable>
parser:                             <expression>
parser:                               <term>
parser:                                 <factor>
parser:                                   <primary>
parser:                                     <operand>
parser:                                       <number>
parser:                                       </number>
parser:                                     </operand>
parser:                                   </primary>
parser:                                 </factor>
parser:                               </term>
parser:                             </expression>
   45:   }
parser:                           </variable>
parser:                         </lhs-variable>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <number>
   46: 
   47:   /* Print the answer: */
parser:                                   </number>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </assignment>
   48:   putint(day);  putchar(' ');
parser:                     </assign-statm>
parser:                   </statement>
parser:                 </statm list>
parser:               </else-part>
parser:             </if-statm>
parser:           </statement>
parser:           <statement>
parser:             <call-statm>
parser:               <function call>
parser:                 <expr list>
parser:                   <expression>
parser:                     <term>
parser:                       <factor>
parser:                         <primary>
parser:                           <operand>
parser:                             <variable>
parser:                             </variable>
parser:                           </operand>
parser:                         </primary>
parser:                       </factor>
parser:                     </term>
parser:                   </expression>
parser:                 </expr list>
parser:               </function call>
parser:             </call-statm>
parser:           </statement>
parser:           <statement>
parser:             <call-statm>
parser:               <function call>
   49:   for (ix = 0;  ix < 5;  ix = ix+1) { putchar(m_name[ix]); }
parser:                 <expr list>
parser:                   <expression>
parser:                     <term>
parser:                       <factor>
parser:                         <primary>
parser:                           <operand>
parser:                             <number>
parser:                             </number>
parser:                           </operand>
parser:                         </primary>
parser:                       </factor>
parser:                     </term>
parser:                   </expression>
parser:                 </expr list>
parser:               </function call>
parser:             </call-statm>
parser:           </statement>
parser:           <statement>
parser:             <for-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:               <expression>
parser:                 <term>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <variable>
parser:                         </variable>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                 </term>
parser:                 <rel opr>
parser:                 </rel opr>
parser:                 <term>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <number>
parser:                         </number>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                 </term>
parser:               </expression>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <variable>
parser:                           </variable>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                     <term opr>
parser:                     </term opr>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:               <statm list>
parser:                 <statement>
parser:                   <call-statm>
parser:                     <function call>
parser:                       <expr list>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <variable>
parser:                                     <expression>
parser:                                       <term>
parser:                                         <factor>
parser:                                           <primary>
parser:                                             <operand>
parser:                                               <variable>
parser:                                               </variable>
parser:                                             </operand>
parser:                                           </primary>
parser:                                         </factor>
parser:                                       </term>
parser:                                     </expression>
parser:                                   </variable>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </expr list>
   50: }
   51: 
   52: int main () 
parser:                     </function call>
parser:                   </call-statm>
parser:                 </statement>
parser:               </statm list>
parser:             </for-statm>
parser:           </statement>
parser:         </statm list>
parser:       </func body>
parser:     </func decl>
parser:     <type>
parser:     </type>
parser:     <func decl>
   53: {
   54:   int y;
   55: 
   56:   for (y = 2010;  y <= 2020;  y = y+1) {
parser:       <func body>
parser:         <type>
parser:         </type>
parser:         <var decl>
parser:         </var decl>
parser:         <statm list>
parser:           <statement>
parser:             <for-statm>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:               <expression>
parser:                 <term>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <variable>
parser:                         </variable>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                 </term>
parser:                 <rel opr>
parser:                 </rel opr>
parser:                 <term>
parser:                   <factor>
parser:                     <primary>
parser:                       <operand>
parser:                         <number>
parser:                         </number>
parser:                       </operand>
parser:                     </primary>
parser:                   </factor>
parser:                 </term>
parser:               </expression>
parser:               <assignment>
parser:                 <lhs-variable>
parser:                   <variable>
parser:                   </variable>
parser:                 </lhs-variable>
parser:                 <expression>
parser:                   <term>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <variable>
parser:                           </variable>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                     <term opr>
parser:                     </term opr>
parser:                     <factor>
parser:                       <primary>
parser:                         <operand>
parser:                           <number>
   57:     easter(y);  putchar(' ');
parser:                           </number>
parser:                         </operand>
parser:                       </primary>
parser:                     </factor>
parser:                   </term>
parser:                 </expression>
parser:               </assignment>
parser:               <statm list>
parser:                 <statement>
parser:                   <call-statm>
parser:                     <function call>
parser:                       <expr list>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <variable>
parser:                                   </variable>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </expr list>
parser:                     </function call>
parser:                   </call-statm>
parser:                 </statement>
parser:                 <statement>
parser:                   <call-statm>
parser:                     <function call>
   58:     putint(y);  putchar(10);
parser:                       <expr list>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <number>
parser:                                   </number>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </expr list>
parser:                     </function call>
parser:                   </call-statm>
parser:                 </statement>
parser:                 <statement>
parser:                   <call-statm>
parser:                     <function call>
parser:                       <expr list>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <variable>
parser:                                   </variable>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </expr list>
parser:                     </function call>
parser:                   </call-statm>
parser:                 </statement>
parser:                 <statement>
parser:                   <call-statm>
parser:                     <function call>
   59:   }   
parser:                       <expr list>
parser:                         <expression>
parser:                           <term>
parser:                             <factor>
parser:                               <primary>
parser:                                 <operand>
parser:                                   <number>
parser:                                   </number>
parser:                                 </operand>
parser:                               </primary>
parser:                             </factor>
parser:                           </term>
parser:                         </expression>
parser:                       </expr list>
parser:                     </function call>
   60: }
parser:                   </call-statm>
parser:                 </statement>
parser:               </statm list>
parser:             </for-statm>
parser:           </statement>
parser:         </statm list>
parser:       </func body>
parser:     </func decl>
parser:   </program>
Tree:     int mod(int x, int y)
Tree:     {
Tree:     
Tree:       return x - (x / y * y);
Tree:     }
Tree:     int easter(int y)
Tree:     {
Tree:       int a;
Tree:       int b;
Tree:       int c;
Tree:       int d;
Tree:       int e;
Tree:       int f;
Tree:       int g;
Tree:       int h;
Tree:       int i;
Tree:       int k;
Tree:       int l;
Tree:       int m;
Tree:       int month;
Tree:       int m_name;
Tree:       int day;
Tree:       int ix;
Tree:     
Tree:       a = mod(y, 19);
Tree:       b = y / 100;
Tree:       c = mod(y, 100);
Tree:       d = b / 4;
Tree:       e = mod(b, 4);
Tree:       f = (b + 8) / 25;
Tree:       g = (b - f + 1) / 3;
Tree:       h = mod(19 * a + b - d - g + 15, 30);
Tree:       i = c / 4;
Tree:       k = mod(c, 4);
Tree:       l = mod(32 + 2 * e + 2 * i - h - k, 7);
Tree:       m = (a + 11 * h + 22 * l) / 451;
Tree:       month = (h + l - (7 * m) + 114) / 31;
Tree:       month = (h + 1 - 7);
Tree:       day = mod(h + l - (7 * m) + 114, 31) + 1;
Tree:       if(month == 3) {
Tree:         m_name[0] = 77;
Tree:         m_name[1] = 97;
Tree:         m_name[2] = 114;
Tree:         m_name[3] = 99;
Tree:         m_name[4] = 104;
Tree:       }
Tree:       else {
Tree:         m_name[0] = 65;
Tree:         m_name[1] = 112;
Tree:         m_name[2] = 114;
Tree:         m_name[3] = 105;
Tree:         m_name[4] = 108;
Tree:       }
Tree:       putint(day);
Tree:       putchar(32);
Tree:       for(ix = 0; ix < 5; ix = ix + 1) {
Tree:         putchar(m_name[ix]);
Tree:       }
Tree:     }
Tree:     int main()
Tree:     {
Tree:       int y;
Tree:     
Tree:       for(y = 2010; y <= 2020; y = y + 1) {
Tree:         easter(y);
Tree:         putchar(32);
Tree:         putint(y);
Tree:         putchar(10);
Tree:       }
Tree:     }
